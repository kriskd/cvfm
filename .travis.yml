language: php
php:
    - 7.2
branches:
    except:
        -master
git:
    submodules: false
install:
    - composer install --no-interaction
before_script:
    - phpenv rehash
    - chmod -R 777 Vendor/cakephp/cakephp/app/tmp
    - mysql -e 'DROP DATABASE IF EXISTS `travis_app`; CREATE DATABASE `travis_app`;'
    - echo "<?php
      class DATABASE_CONFIG {
          public \$default = array(
          'datasource' => 'Database/Mysql',
          'host' => '0.0.0.0',
          'persistent' => false,
          'login' => 'travis',
          'password' => '',
          'database' => 'travis_app',
          'prefix' => '',
          );
          public \$test = array(
          'datasource' => 'Database/Mysql',
          'host' => '0.0.0.0',
          'persistent' => false,
          'login' => 'travis',
          'password' => '',
          'database' => 'travis_app',
          'prefix' => '',
          );
    }" > Config/database.php
    - echo "<?php
      App::import('Vendor', 'autoload');
      CakePlugin::loadAll([
          ['bootstrap' => false],
      ]);
      CakePlugin::load(
      'HtmlPurifier', array('bootstrap' => true)
      );
      Purifier::config('MyPurifier', array(
      'HTML.AllowedElements' => 'a,em,blockquote,p,strong,small,pre,code,span,ul,ol,li,img,h1,h2,h3,h4,h5,h6,br,hr'
      ));
      Purifier::config('StripAll', array('HTML.AllowedElements' => ''));
      " > Config/bootstrap.php
    - echo "<?php
      Configure::write('debug', 2);
      Configure::write('Routing.prefixes', array('admin'));
      Configure::write('App.encoding', 'UTF-8');
      Configure::write('Error', array(
      'handler' => 'ErrorHandler::handleError',
      'level' => E_ALL & ~E_DEPRECATED,
      'trace' => true
      ));
      Configure::write('Exception', array(
      'handler' => 'ErrorHandler::handleException',
      'renderer' => 'ExceptionRenderer',
      'log' => true
      ));
      Configure::write('Session', array(
      'defaults' => 'database',
      'checkAgent' => false,
      'ini', array('session.cookie_secure' => false, 'session.referer_check' => false)
      )
      );" > Config/core.php
    - echo "<?php
      Router::connect('/', array('controller' => 'pages', 'action' => 'display', 'home'));
      Router::connect('/pages/*', array('controller' => 'pages', 'action' => 'display'));
      Router::connect('/admin', array('controller' => 'schedules', 'action' => 'index', 'admin' => true));
      CakePlugin::routes();
      Router::parseExtensions('json');
      require CAKE . 'Config' . DS . 'routes.php';
      " > Config/routes.php
    - echo "<?php
      class EmailConfig {
          public \$smtp = array(
          'transport' => 'Smtp',
          'from' => array('foo@bar.com' => 'Foo Bar'),
          'host' => 'mail.bar.com',
          'port' => 587,
          'timeout' => 30,
          'username' => 'foo@bar.com',
          'password' => '123',
          'client' => null,
          'log' => true,
          );
      }" > Config/email.php
script:
    - sh -c "Console/cake test app AllTests --stderr"
notifications:
    email: false
